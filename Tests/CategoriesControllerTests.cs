// Tests/CategoriesControllerTests.cs

// TODO: Add unit tests for CategoriesController.
// Instructions:
// 1. Create a new file named 'CategoriesControllerTests.cs' in the 'Tests' folder.
// 2. Use Copilot to generate unit tests for the CategoriesController.
// 3. Ensure tests cover all action methods and handle different scenarios.

// Steps:
// 1. Use similar structure as in 'ItemsControllerTests'.
// 2. Mock 'ICategoryService'.
// 3. Write test methods for Get, GetById, Post, Put, and Delete actions.

// Example of a test method to be generated by Copilot:

/*
using Xunit;
using CopilotDemo.Controllers;
using CopilotDemo.Services;
using CopilotDemo.Models;
using Microsoft.AspNetCore.Mvc;
using Moq;
using System.Collections.Generic;

public class CategoriesControllerTests
{
    [Fact]
    public void Get_ReturnsAllCategories()
    {
        // Arrange
        var mockService = new Mock<ICategoryService>();
        mockService.Setup(service => service.GetAll()).Returns(GetTestCategories());
        var controller = new CategoriesController(mockService.Object);

        // Act
        var result = controller.Get();

        // Assert
        Assert.NotNull(result);
        Assert.Equal(2, result.Count());
    }

    private IEnumerable<Category> GetTestCategories()
    {
        return new List<Category>
        {
            new Category { Id = 1, Name = "Category1" },
            new Category { Id = 2, Name = "Category2" }
        };
    }

    // Continue adding test methods for other actions.
}
*/
